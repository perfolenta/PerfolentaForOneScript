////////////////////////////////////////////////////////////
// Описание пакета для сборки и установки
// Полную документацию см. на hub.oscript.io/packaging
//

///////////////////////////////////////////////////////////////////
// Процедуры установки пакета с клиентской машины        
///////////////////////////////////////////////////////////////////


// Вызывается пакетным менеджером перед установкой пакета на клиентскую машину.
// 
// Параметры:
//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.
//   ЧтениеZipФайла - ЧтениеZipФайла. Архив пакета.
// 
Процедура ПередУстановкой(Знач КаталогУстановкиПакета, Знач ЧтениеZipФайла) Экспорт
	// TODO: Реализуйте спец. логику перед установкой, если требуется
КонецПроцедуры


// Вызывается пакетным менеджером после распаковки пакета на клиентскую машину.
// 
// Параметры:
//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.
//   СтандартнаяОбработка - Булево. Возможность отменить стандартную обработку.
// 
Процедура ПриУстановке(Знач КаталогУстановкиПакета, СтандартнаяОбработка) Экспорт
	// TODO: Реализуйте спец. логику установки, если требуется
КонецПроцедуры


///////////////////////////////////////////////////////////////////
// Процедуры сборки пакета                                          
///////////////////////////////////////////////////////////////////


// Вызывается пакетным менеджером перед началом сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
// 
Процедура ПередСборкой(Знач РабочийКаталог) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
КонецПроцедуры


// Вызывается пакетным менеджером после помещения файлов в пакет.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
//   АрхивПакета - ЗаписьZIPФайла - ZIP-архив с содержимым пакета (включаемые файлы).
// 
Процедура ПриСборке(Знач РабочийКаталог, Знач АрхивПакета) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
	// АрхивПакета.Добавить(ПолныйПутьНужногоФайла,
	//	РежимСохраненияПутейZIP.СохранятьОтносительныеПути,
	//	РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
КонецПроцедуры


// Вызывается пакетным менеджером после сборки пакета.
// 
// Параметры:
//   РабочийКаталог - Строка - Текущий рабочий каталог с исходниками пакета.
//   ПутьКФайлуПакета - Строка - Полный путь к собранному файлу пакета.
// 
Процедура ПослеСборки(Знач РабочийКаталог, Знач ПутьКФайлуПакета) Экспорт
	// TODO: Реализуйте спец. логику сборки, если требуется
КонецПроцедуры


Описание
	// Имя библиотеки. Используется при именовании файлов пакета
	// и в `opm install <Имя>`
	.Имя("perfolenta")

	// Версия самой библиотеки
	.Версия("1.0.0")

	// `opm build` соберёт файл по шаблону <Имя>-<Версия>.ospx

	// Зависимости библиотеки (opm будет их устанавливать автоматически)
	//.ЗависитОт("ИмяНужнойБиблиотеки")
	//.ЗависитОт("ЕщёОдноИмяНужнойБиблиотеки")

	// Имя автора
	.Автор("Рогаткин Сергей Анатольевич")
	// и почта для связи
	.АдресАвтора("perfolenta@ukr.net")

	// Краткое описание, что же даёт эта библиотека людям
	.Описание("Библиотека для запуска кода Перфоленты из скриптов OneScript")

	//.ВерсияСреды("1.0.15")   // <- Если необходима определённая версия движка

	// Просто нужен
	//.ВключитьФайл("lib.config")

	// Сюда будут складываться компоненты (см. appveyor.yml)
	.ВключитьФайл("bin")

	// Это файл автозагрузки, который подгружает компоненты из библиотеки
	.ВключитьФайл("package-loader.os")

	// Подробное описание библиотеки для VSCode
	.ВключитьФайл("README.md")
;

// vim: filetype=onescript
